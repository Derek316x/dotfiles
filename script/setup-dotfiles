#!/bin/bash
#
# This file is not run directly, it is instead called from script/bootstrap

link_files () {
  ln -s $1 $2
  success "Linked $1 to $2"
}

setup_dotfiles () {

  info "Linking vim"
  rm -rf $HOME/.vim
  source="$DOTFILES_ROOT/vim"
  dest="$HOME/.vim"
  link_files $source $dest

  info 'Installing .dotfiles'

  overwrite_all=false
  backup_all=false
  skip_all=false

  for source in `find $DOTFILES_ROOT -maxdepth 2 -name \*.symlink`
  do
    dest="$HOME/.`basename \"${source%.*}\"`"

    if [ -f $dest ] || [ -d $dest ]
    then

      overwrite=false
      backup=false
      skip=false

      if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
      then
        unknown=true
        while [ "$unknown" == "true" ]
        do
          user "File already exists: `basename $dest`, what do you want to do? [s/S]kip (all), [o/O]verwrite (all), [b/B]ackup (all)?"
          read -n 1 action
          echo ''

          unknown=false

          case "$action" in
            o )
              overwrite=true;;
            O )
              overwrite_all=true;;
            b )
              backup=true;;
            B )
              backup_all=true;;
            s )
              skip=true;;
            S )
              skip_all=true;;
            * )
              info "Unknown action '$action'"
              unknown=true;;
          esac
        done
      fi

      if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
      then
        rm -rf $dest
        info "Removed $dest"
      fi

      if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
      then
        mv $dest $dest\.backup
        info "Moved $dest to $dest.backup"
      fi

      if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
      then
        link_files $source $dest
      else
        info "Skipped $source"
      fi

    else
      link_files $source $dest
    fi

  done

}


